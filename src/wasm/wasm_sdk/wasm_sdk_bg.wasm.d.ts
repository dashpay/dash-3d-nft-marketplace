/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_assetlockproof_free: (a: number, b: number) => void;
export const assetlockproof_createInstant: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const assetlockproof_createChain: (a: number, b: number, c: number, d: number) => void;
export const assetlockproof_proofType: (a: number, b: number) => void;
export const assetlockproof_transaction: (a: number, b: number) => void;
export const assetlockproof_outputIndex: (a: number) => number;
export const assetlockproof_instantLock: (a: number, b: number) => void;
export const assetlockproof_coreChainLockedHeight: (a: number) => number;
export const assetlockproof_outPoint: (a: number, b: number) => void;
export const assetlockproof_toBytes: (a: number, b: number) => void;
export const assetlockproof_fromBytes: (a: number, b: number, c: number) => void;
export const assetlockproof_toJSON: (a: number, b: number) => void;
export const assetlockproof_fromJSON: (a: number, b: number) => void;
export const assetlockproof_toObject: (a: number, b: number) => void;
export const assetlockproof_getIdentityId: (a: number, b: number) => void;
export const validateAssetLockProof: (a: number, b: number, c: number, d: number) => void;
export const calculateCreditsFromProof: (a: number, b: number, c: number, d: bigint) => void;
export const createOutPoint: (a: number, b: number, c: number, d: number) => void;
export const createInstantProofFromParts: (a: number, b: number, c: number, d: number) => void;
export const createChainProofFromParts: (a: number, b: number, c: number, d: number, e: number) => void;
export const __wbg_mnemonic_free: (a: number, b: number) => void;
export const mnemonic_generate: (a: number, b: number, c: number) => void;
export const mnemonic_fromPhrase: (a: number, b: number, c: number, d: number) => void;
export const mnemonic_fromEntropy: (a: number, b: number, c: number, d: number) => void;
export const mnemonic_phrase: (a: number, b: number) => void;
export const mnemonic_words: (a: number) => number;
export const mnemonic_wordCount: (a: number) => number;
export const mnemonic_entropy: (a: number) => number;
export const mnemonic_toSeed: (a: number, b: number, c: number) => number;
export const mnemonic_validate: (a: number, b: number, c: number) => number;
export const generateMnemonic: (a: number, b: number, c: number) => void;
export const validateMnemonic: (a: number, b: number, c: number) => number;
export const mnemonicToSeed: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const getWordList: (a: number) => number;
export const generateEntropy: (a: number, b: number) => void;
export const generateBlsPrivateKey: (a: number) => void;
export const blsPrivateKeyToPublicKey: (a: number, b: number, c: number) => void;
export const blsSign: (a: number, b: number, c: number, d: number, e: number) => void;
export const blsVerify: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const validateBlsPublicKey: (a: number, b: number, c: number) => void;
export const blsAggregateSignatures: (a: number, b: number) => void;
export const blsCreateThresholdShare: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const getBlsSignatureSize: () => number;
export const getBlsPublicKeySize: () => number;
export const getBlsPrivateKeySize: () => number;
export const __wbg_broadcastoptions_free: (a: number, b: number) => void;
export const broadcastoptions_new: () => number;
export const broadcastoptions_setWaitForConfirmation: (a: number, b: number) => void;
export const broadcastoptions_setRetryCount: (a: number, b: number) => void;
export const broadcastoptions_setTimeoutMs: (a: number, b: number) => void;
export const broadcastoptions_waitForConfirmation: (a: number) => number;
export const broadcastoptions_retryCount: (a: number) => number;
export const broadcastoptions_timeoutMs: (a: number) => number;
export const __wbg_broadcastresponse_free: (a: number, b: number) => void;
export const broadcastresponse_success: (a: number) => number;
export const broadcastresponse_transactionId: (a: number, b: number) => void;
export const broadcastresponse_blockHeight: (a: number, b: number) => void;
export const broadcastresponse_error: (a: number, b: number) => void;
export const broadcastresponse_toObject: (a: number, b: number) => void;
export const calculateStateTransitionHash: (a: number, b: number) => void;
export const validateStateTransition: (a: number, b: number, c: number) => void;
export const processBroadcastResponse: (a: number, b: number) => void;
export const processWaitForSTResultResponse: (a: number, b: number) => void;
export const __wbg_wasmcachemanager_free: (a: number, b: number) => void;
export const wasmcachemanager_new: () => number;
export const wasmcachemanager_setTTLs: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const wasmcachemanager_setMaxSizes: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const wasmcachemanager_cacheContract: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmcachemanager_getCachedContract: (a: number, b: number, c: number, d: number) => void;
export const wasmcachemanager_cacheIdentity: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmcachemanager_getCachedIdentity: (a: number, b: number, c: number, d: number) => void;
export const wasmcachemanager_cacheDocument: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmcachemanager_getCachedDocument: (a: number, b: number, c: number, d: number) => void;
export const wasmcachemanager_cacheToken: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmcachemanager_getCachedToken: (a: number, b: number, c: number, d: number) => void;
export const wasmcachemanager_cacheQuorumKeys: (a: number, b: number, c: number, d: number) => void;
export const wasmcachemanager_getCachedQuorumKeys: (a: number, b: number, c: number) => void;
export const wasmcachemanager_cacheMetadata: (a: number, b: number, c: number, d: number, e: number) => void;
export const wasmcachemanager_getCachedMetadata: (a: number, b: number, c: number, d: number) => void;
export const wasmcachemanager_clearAll: (a: number) => void;
export const wasmcachemanager_clearCache: (a: number, b: number, c: number) => void;
export const wasmcachemanager_cleanupExpired: (a: number) => void;
export const wasmcachemanager_getStats: (a: number, b: number) => void;
export const wasmcachemanager_startAutoCleanup: (a: number, b: number) => void;
export const wasmcachemanager_stopAutoCleanup: (a: number) => void;
export const __wbg_wasmcontext_free: (a: number, b: number) => void;
export const __wbg_contractcacheconfig_free: (a: number, b: number) => void;
export const contractcacheconfig_new: () => number;
export const contractcacheconfig_setMaxContracts: (a: number, b: number) => void;
export const contractcacheconfig_setTtl: (a: number, b: number) => void;
export const contractcacheconfig_setCacheHistory: (a: number, b: number) => void;
export const contractcacheconfig_setMaxVersionsPerContract: (a: number, b: number) => void;
export const contractcacheconfig_setEnablePreloading: (a: number, b: number) => void;
export const __wbg_contractcache_free: (a: number, b: number) => void;
export const contractcache_new: (a: number) => number;
export const contractcache_cacheContract: (a: number, b: number, c: number, d: number) => void;
export const contractcache_getCachedContract: (a: number, b: number, c: number, d: number) => void;
export const contractcache_getContractMetadata: (a: number, b: number, c: number, d: number) => void;
export const contractcache_isContractCached: (a: number, b: number, c: number) => number;
export const contractcache_getCachedContractIds: (a: number) => number;
export const contractcache_getCacheStats: (a: number, b: number) => void;
export const contractcache_clearCache: (a: number) => void;
export const contractcache_cleanupExpired: (a: number) => number;
export const contractcache_getPreloadSuggestions: (a: number) => number;
export const createContractCache: (a: number) => number;
export const integrateContractCache: (a: number, b: number, c: number) => void;
export const __wbg_contractversion_free: (a: number, b: number) => void;
export const contractversion_version: (a: number) => number;
export const contractversion_schemaHash: (a: number, b: number) => void;
export const contractversion_ownerId: (a: number, b: number) => void;
export const contractversion_createdAt: (a: number) => bigint;
export const contractversion_documentTypesCount: (a: number) => number;
export const contractversion_totalDocuments: (a: number) => bigint;
export const contractversion_toObject: (a: number, b: number) => void;
export const __wbg_contracthistoryentry_free: (a: number, b: number) => void;
export const contracthistoryentry_contractId: (a: number, b: number) => void;
export const contracthistoryentry_version: (a: number) => number;
export const contracthistoryentry_operation: (a: number, b: number) => void;
export const contracthistoryentry_timestamp: (a: number) => bigint;
export const contracthistoryentry_changes: (a: number) => number;
export const contracthistoryentry_transactionHash: (a: number, b: number) => void;
export const contracthistoryentry_toObject: (a: number, b: number) => void;
export const __wbg_schemachange_free: (a: number, b: number) => void;
export const schemachange_documentType: (a: number, b: number) => void;
export const schemachange_changeType: (a: number, b: number) => void;
export const schemachange_fieldName: (a: number, b: number) => void;
export const schemachange_oldValue: (a: number, b: number) => void;
export const schemachange_newValue: (a: number, b: number) => void;
export const fetchContractHistory: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const fetchContractVersions: (a: number, b: number, c: number) => number;
export const getSchemaChanges: (a: number, b: number, c: number, d: number, e: number) => number;
export const fetchContractAtVersion: (a: number, b: number, c: number, d: number) => number;
export const checkContractUpdates: (a: number, b: number, c: number, d: number) => number;
export const getMigrationGuide: (a: number, b: number, c: number, d: number, e: number) => number;
export const monitorContractUpdates: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const __wbg_dapiclientconfig_free: (a: number, b: number) => void;
export const dapiclientconfig_new: (a: number, b: number) => number;
export const dapiclientconfig_addEndpoint: (a: number, b: number, c: number) => void;
export const dapiclientconfig_setTimeout: (a: number, b: number) => void;
export const dapiclientconfig_setRetries: (a: number, b: number) => void;
export const dapiclientconfig_endpoints: (a: number) => number;
export const __wbg_dapiclient_free: (a: number, b: number) => void;
export const dapiclient_new: (a: number, b: number) => void;
export const dapiclient_network: (a: number, b: number) => void;
export const dapiclient_getCurrentEndpoint: (a: number, b: number) => void;
export const dapiclient_broadcastStateTransition: (a: number, b: number, c: number, d: number) => number;
export const dapiclient_getIdentity: (a: number, b: number, c: number, d: number) => number;
export const dapiclient_getDataContract: (a: number, b: number, c: number, d: number) => number;
export const dapiclient_getDocuments: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => number;
export const dapiclient_getEpochInfo: (a: number, b: number, c: number) => number;
export const dapiclient_subscribeToStateTransitions: (a: number, b: number, c: number) => number;
export const dapiclient_getProtocolVersion: (a: number) => number;
export const dapiclient_waitForStateTransitionResult: (a: number, b: number, c: number, d: number) => number;
export const __wbg_identitywasm_free: (a: number, b: number) => void;
export const identitywasm_new: (a: number, b: number) => void;
export const identitywasm_id: (a: number, b: number) => void;
export const identitywasm_revision: (a: number) => bigint;
export const identitywasm_setPublicKeys: (a: number, b: number, c: number) => void;
export const identitywasm_balance: (a: number) => number;
export const identitywasm_setBalance: (a: number, b: number) => void;
export const identitywasm_increaseBalance: (a: number, b: number) => number;
export const identitywasm_reduceBalance: (a: number, b: number) => number;
export const identitywasm_setRevision: (a: number, b: number) => void;
export const identitywasm_getRevision: (a: number) => number;
export const identitywasm_toJSON: (a: number, b: number) => void;
export const identitywasm_hash: (a: number, b: number) => void;
export const identitywasm_getPublicKeyMaxId: (a: number) => number;
export const identitywasm_fromBuffer: (a: number, b: number, c: number) => void;
export const __wbg_datacontractwasm_free: (a: number, b: number) => void;
export const datacontractwasm_id: (a: number, b: number) => void;
export const datacontractwasm_version: (a: number) => number;
export const datacontractwasm_ownerId: (a: number, b: number) => void;
export const datacontractwasm_toJSON: (a: number, b: number) => void;
export const __wbg_epoch_free: (a: number, b: number) => void;
export const epoch_index: (a: number) => number;
export const epoch_startBlockHeight: (a: number) => bigint;
export const epoch_startBlockCoreHeight: (a: number) => number;
export const epoch_startTimeMs: (a: number) => bigint;
export const epoch_feeMultiplier: (a: number) => number;
export const epoch_toObject: (a: number, b: number) => void;
export const __wbg_evonode_free: (a: number, b: number) => void;
export const evonode_proTxHash: (a: number, b: number) => void;
export const evonode_ownerAddress: (a: number, b: number) => void;
export const evonode_votingAddress: (a: number, b: number) => void;
export const evonode_isHPMN: (a: number) => number;
export const evonode_platformP2PPort: (a: number) => number;
export const evonode_platformHTTPPort: (a: number) => number;
export const evonode_nodeIP: (a: number, b: number) => void;
export const evonode_toObject: (a: number, b: number) => void;
export const getCurrentEpoch: (a: number) => number;
export const getEpochByIndex: (a: number, b: number) => number;
export const getCurrentEvonodes: (a: number) => number;
export const getEvonodesForEpoch: (a: number, b: number) => number;
export const getEvonodeByProTxHash: (a: number, b: number, c: number) => number;
export const getCurrentQuorum: (a: number) => number;
export const calculateEpochBlocks: (a: number, b: number, c: number) => void;
export const estimateNextEpochTime: (a: number, b: bigint) => number;
export const getEpochForBlockHeight: (a: number, b: bigint) => number;
export const getValidatorSetChanges: (a: number, b: number, c: number) => number;
export const getEpochStats: (a: number, b: number) => number;
export const __wbg_wasmerror_free: (a: number, b: number) => void;
export const wasmerror_category: (a: number) => number;
export const wasmerror_message: (a: number, b: number) => void;
export const __wbg_fetchoptions_free: (a: number, b: number) => void;
export const __wbg_get_fetchoptions_retries: (a: number) => number;
export const __wbg_set_fetchoptions_retries: (a: number, b: number) => void;
export const __wbg_get_fetchoptions_timeout: (a: number) => number;
export const __wbg_set_fetchoptions_timeout: (a: number, b: number) => void;
export const __wbg_get_fetchoptions_prove: (a: number) => number;
export const __wbg_set_fetchoptions_prove: (a: number, b: number) => void;
export const fetchoptions_new: () => number;
export const fetchoptions_withRetries: (a: number, b: number) => number;
export const fetchoptions_withTimeout: (a: number, b: number) => number;
export const fetchoptions_withProve: (a: number, b: number) => number;
export const fetchIdentity: (a: number, b: number, c: number, d: number) => number;
export const fetchDataContract: (a: number, b: number, c: number, d: number) => number;
export const fetchDocument: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const fetchIdentityBalance: (a: number, b: number, c: number, d: number) => number;
export const fetchIdentityNonce: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_fetchmanyoptions_free: (a: number, b: number) => void;
export const fetchmanyoptions_new: () => number;
export const fetchmanyoptions_setProve: (a: number, b: number) => void;
export const __wbg_fetchmanyresponse_free: (a: number, b: number) => void;
export const fetchmanyresponse_items: (a: number) => number;
export const fetchmanyresponse_metadata: (a: number) => number;
export const fetch_identities: (a: number, b: number, c: number, d: number) => number;
export const fetch_data_contracts: (a: number, b: number, c: number, d: number) => number;
export const __wbg_documentqueryoptions_free: (a: number, b: number) => void;
export const documentqueryoptions_new: (a: number, b: number, c: number, d: number) => number;
export const documentqueryoptions_setWhereClause: (a: number, b: number) => void;
export const documentqueryoptions_setOrderBy: (a: number, b: number) => void;
export const documentqueryoptions_setLimit: (a: number, b: number) => void;
export const documentqueryoptions_setStartAt: (a: number, b: number, c: number) => void;
export const documentqueryoptions_setStartAfter: (a: number, b: number, c: number) => void;
export const fetch_documents: (a: number, b: number, c: number) => number;
export const fetchIdentityUnproved: (a: number, b: number, c: number, d: number) => number;
export const fetchDataContractUnproved: (a: number, b: number, c: number, d: number) => number;
export const fetchDocumentsUnproved: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => number;
export const fetchIdentityByKeyUnproved: (a: number, b: number, c: number, d: number) => number;
export const fetchDataContractHistoryUnproved: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const fetchBatchUnproved: (a: number, b: number, c: number) => number;
export const __wbg_group_free: (a: number, b: number) => void;
export const group_id: (a: number, b: number) => void;
export const group_name: (a: number, b: number) => void;
export const group_description: (a: number, b: number) => void;
export const group_groupType: (a: number, b: number) => void;
export const group_createdAt: (a: number) => bigint;
export const group_memberCount: (a: number) => number;
export const group_threshold: (a: number) => number;
export const group_active: (a: number) => number;
export const group_toObject: (a: number, b: number) => void;
export const __wbg_groupmember_free: (a: number, b: number) => void;
export const groupmember_identityId: (a: number, b: number) => void;
export const groupmember_role: (a: number, b: number) => void;
export const groupmember_joinedAt: (a: number) => bigint;
export const groupmember_permissions: (a: number) => number;
export const groupmember_hasPermission: (a: number, b: number, c: number) => number;
export const __wbg_groupproposal_free: (a: number, b: number) => void;
export const groupproposal_id: (a: number, b: number) => void;
export const groupproposal_groupId: (a: number, b: number) => void;
export const groupproposal_proposerId: (a: number, b: number) => void;
export const groupproposal_title: (a: number, b: number) => void;
export const groupproposal_description: (a: number, b: number) => void;
export const groupproposal_actionType: (a: number, b: number) => void;
export const groupproposal_actionData: (a: number, b: number) => void;
export const groupproposal_createdAt: (a: number) => bigint;
export const groupproposal_expiresAt: (a: number) => bigint;
export const groupproposal_approvals: (a: number) => number;
export const groupproposal_rejections: (a: number) => number;
export const groupproposal_executed: (a: number) => number;
export const groupproposal_isActive: (a: number) => number;
export const groupproposal_isExpired: (a: number) => number;
export const groupproposal_toObject: (a: number, b: number) => void;
export const createGroup: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: bigint, m: number) => void;
export const addGroupMember: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: bigint, l: number) => void;
export const removeGroupMember: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: bigint, i: number) => void;
export const createGroupProposal: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number, n: number, o: bigint, p: number) => void;
export const voteOnProposal: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: bigint, j: number) => void;
export const executeProposal: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: number) => void;
export const fetchGroup: (a: number, b: number, c: number) => number;
export const fetchGroupMembers: (a: number, b: number, c: number) => number;
export const fetchGroupProposals: (a: number, b: number, c: number, d: number) => number;
export const fetchUserGroups: (a: number, b: number, c: number) => number;
export const checkGroupPermission: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const __wbg_identitybalance_free: (a: number, b: number) => void;
export const identitybalance_confirmed: (a: number) => bigint;
export const identitybalance_unconfirmed: (a: number) => bigint;
export const identitybalance_total: (a: number) => bigint;
export const identitybalance_toObject: (a: number, b: number) => void;
export const identityrevision_publicKeysCount: (a: number) => number;
export const identityrevision_toObject: (a: number, b: number) => void;
export const __wbg_identityinfo_free: (a: number, b: number) => void;
export const identityinfo_id: (a: number, b: number) => void;
export const identityinfo_balance: (a: number) => number;
export const identityinfo_revision: (a: number) => number;
export const identityinfo_toObject: (a: number, b: number) => void;
export const fetchIdentityBalanceDetails: (a: number, b: number, c: number) => number;
export const fetchIdentityRevision: (a: number, b: number, c: number) => number;
export const fetchIdentityInfo: (a: number, b: number, c: number) => number;
export const fetchIdentityBalanceHistory: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const checkIdentityBalance: (a: number, b: number, c: number, d: bigint, e: number) => number;
export const estimateCreditsNeeded: (a: number, b: number, c: number, d: number) => void;
export const monitorIdentityBalance: (a: number, b: number, c: number, d: number, e: number) => number;
export const fetchIdentityKeys: (a: number, b: number, c: number) => number;
export const fetchIdentityCreditsInDash: (a: number, b: number, c: number) => number;
export const batchFetchIdentityInfo: (a: number, b: number, c: number) => number;
export const estimateCreditTransferFee: (a: number, b: bigint, c: number, d: number) => void;
export const __wbg_metadata_free: (a: number, b: number) => void;
export const metadata_new: (a: bigint, b: number, c: number, d: bigint, e: number, f: number, g: number) => number;
export const metadata_height: (a: number) => bigint;
export const metadata_coreChainLockedHeight: (a: number) => number;
export const metadata_epoch: (a: number) => number;
export const metadata_timeMs: (a: number) => bigint;
export const metadata_protocolVersion: (a: number) => number;
export const metadata_chainId: (a: number, b: number) => void;
export const metadata_toObject: (a: number, b: number) => void;
export const __wbg_metadataverificationconfig_free: (a: number, b: number) => void;
export const metadataverificationconfig_new: () => number;
export const metadataverificationconfig_setMaxHeightDifference: (a: number, b: bigint) => void;
export const metadataverificationconfig_setMaxTimeDifference: (a: number, b: bigint) => void;
export const metadataverificationconfig_setVerifyTime: (a: number, b: number) => void;
export const metadataverificationconfig_setVerifyHeight: (a: number, b: number) => void;
export const metadataverificationconfig_setVerifyChainId: (a: number, b: number) => void;
export const metadataverificationconfig_setExpectedChainId: (a: number, b: number, c: number) => void;
export const __wbg_metadataverificationresult_free: (a: number, b: number) => void;
export const metadataverificationresult_valid: (a: number) => number;
export const metadataverificationresult_heightValid: (a: number) => number;
export const metadataverificationresult_timeValid: (a: number) => number;
export const metadataverificationresult_chainIdValid: (a: number) => number;
export const metadataverificationresult_heightDifference: (a: number, b: number) => void;
export const metadataverificationresult_timeDifferenceMs: (a: number, b: number) => void;
export const metadataverificationresult_errorMessage: (a: number, b: number) => void;
export const metadataverificationresult_toObject: (a: number, b: number) => void;
export const verifyMetadata: (a: number, b: bigint, c: number, d: number, e: number) => number;
export const compareMetadata: (a: number, b: number) => number;
export const getMostRecentMetadata: (a: number, b: number, c: number) => void;
export const isMetadataStale: (a: number, b: bigint, c: bigint, d: number, e: bigint) => number;
export const __wbg_performancemetrics_free: (a: number, b: number) => void;
export const performancemetrics_operation: (a: number, b: number) => void;
export const performancemetrics_duration: (a: number, b: number) => void;
export const performancemetrics_success: (a: number) => number;
export const performancemetrics_errorMessage: (a: number, b: number) => void;
export const performancemetrics_toObject: (a: number, b: number) => void;
export const __wbg_sdkmonitor_free: (a: number, b: number) => void;
export const sdkmonitor_new: (a: number, b: number) => number;
export const sdkmonitor_enabled: (a: number) => number;
export const sdkmonitor_enable: (a: number) => void;
export const sdkmonitor_disable: (a: number) => void;
export const sdkmonitor_startOperation: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const sdkmonitor_endOperation: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const sdkmonitor_addOperationMetadata: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const sdkmonitor_getMetrics: (a: number, b: number) => void;
export const sdkmonitor_getMetricsByOperation: (a: number, b: number, c: number, d: number) => void;
export const sdkmonitor_getOperationStats: (a: number, b: number) => void;
export const sdkmonitor_clearMetrics: (a: number, b: number) => void;
export const sdkmonitor_getActiveOperationsCount: (a: number, b: number) => void;
export const initializeMonitoring: (a: number, b: number, c: number) => void;
export const isGlobalMonitorEnabled: (a: number) => void;
export const trackOperation: (a: number, b: number, c: number) => number;
export const __wbg_healthcheckresult_free: (a: number, b: number) => void;
export const healthcheckresult_status: (a: number, b: number) => void;
export const healthcheckresult_checks: (a: number) => number;
export const healthcheckresult_timestamp: (a: number) => number;
export const performHealthCheck: (a: number) => number;
export const getResourceUsage: (a: number) => void;
export const __wbg_nonceoptions_free: (a: number, b: number) => void;
export const nonceoptions_new: () => number;
export const nonceoptions_setCached: (a: number, b: number) => void;
export const nonceoptions_setProve: (a: number, b: number) => void;
export const __wbg_nonceresponse_free: (a: number, b: number) => void;
export const nonceresponse_nonce: (a: number) => bigint;
export const nonceresponse_metadata: (a: number) => number;
export const checkIdentityNonceCache: (a: number, b: number, c: number) => void;
export const updateIdentityNonceCache: (a: number, b: number, c: number, d: bigint) => void;
export const checkIdentityContractNonceCache: (a: number, b: number, c: number, d: number, e: number) => void;
export const updateIdentityContractNonceCache: (a: number, b: number, c: number, d: number, e: number, f: bigint) => void;
export const incrementIdentityNonceCache: (a: number, b: number, c: number, d: number) => void;
export const incrementIdentityContractNonceCache: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const clearIdentityNonceCache: (a: number) => void;
export const clearIdentityContractNonceCache: (a: number) => void;
export const __wbg_featureflags_free: (a: number, b: number) => void;
export const featureflags_new: () => number;
export const featureflags_minimal: () => number;
export const featureflags_setEnableIdentity: (a: number, b: number) => void;
export const featureflags_setEnableContracts: (a: number, b: number) => void;
export const featureflags_setEnableDocuments: (a: number, b: number) => void;
export const featureflags_setEnableTokens: (a: number, b: number) => void;
export const featureflags_setEnableWithdrawals: (a: number, b: number) => void;
export const featureflags_setEnableVoting: (a: number, b: number) => void;
export const featureflags_setEnableCache: (a: number, b: number) => void;
export const featureflags_setEnableProofVerification: (a: number, b: number) => void;
export const featureflags_getEstimatedSizeReduction: (a: number, b: number) => void;
export const memoryoptimizer_new: () => number;
export const memoryoptimizer_trackAllocation: (a: number, b: number) => void;
export const memoryoptimizer_getStats: (a: number, b: number) => void;
export const memoryoptimizer_reset: (a: number) => void;
export const memoryoptimizer_forceGC: () => void;
export const optimizeUint8Array: (a: number, b: number) => number;
export const __wbg_batchoptimizer_free: (a: number, b: number) => void;
export const batchoptimizer_new: () => number;
export const batchoptimizer_setBatchSize: (a: number, b: number) => void;
export const batchoptimizer_setMaxConcurrent: (a: number, b: number) => void;
export const batchoptimizer_getOptimalBatchCount: (a: number, b: number) => number;
export const batchoptimizer_getBatchBoundaries: (a: number, b: number, c: number) => number;
export const initStringCache: () => void;
export const internString: (a: number, b: number, c: number) => void;
export const clearStringCache: () => void;
export const __wbg_compressionutils_free: (a: number, b: number) => void;
export const compressionutils_shouldCompress: (a: number) => number;
export const compressionutils_estimateCompressionRatio: (a: number, b: number) => number;
export const __wbg_performancemonitor_free: (a: number, b: number) => void;
export const performancemonitor_new: () => number;
export const performancemonitor_mark: (a: number, b: number, c: number) => void;
export const performancemonitor_getReport: (a: number, b: number) => void;
export const performancemonitor_reset: (a: number) => void;
export const getOptimizationRecommendations: () => number;
export const __wbg_prefundedbalance_free: (a: number, b: number) => void;
export const prefundedbalance_balanceType: (a: number, b: number) => void;
export const prefundedbalance_amount: (a: number) => bigint;
export const prefundedbalance_lockedUntil: (a: number, b: number) => void;
export const prefundedbalance_purpose: (a: number, b: number) => void;
export const prefundedbalance_canWithdraw: (a: number) => number;
export const prefundedbalance_isLocked: (a: number) => number;
export const prefundedbalance_getRemainingLockTime: (a: number) => bigint;
export const prefundedbalance_toObject: (a: number, b: number) => void;
export const __wbg_balanceallocation_free: (a: number, b: number) => void;
export const balanceallocation_identityId: (a: number, b: number) => void;
export const balanceallocation_balanceType: (a: number, b: number) => void;
export const balanceallocation_allocatedAmount: (a: number) => bigint;
export const balanceallocation_usedAmount: (a: number) => bigint;
export const balanceallocation_getAvailableAmount: (a: number) => bigint;
export const balanceallocation_allocatedAt: (a: number) => bigint;
export const balanceallocation_expiresAt: (a: number, b: number) => void;
export const balanceallocation_isExpired: (a: number) => number;
export const balanceallocation_toObject: (a: number, b: number) => void;
export const createPrefundedBalance: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: number, h: number, i: number, j: number, k: bigint, l: number) => void;
export const transferPrefundedBalance: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: bigint, i: bigint, j: number) => void;
export const usePrefundedBalance: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: number, h: number, i: bigint, j: number) => void;
export const releasePrefundedBalance: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: number) => void;
export const fetchPrefundedBalances: (a: number, b: number, c: number) => number;
export const getPrefundedBalance: (a: number, b: number, c: number, d: number, e: number) => number;
export const checkPrefundedBalance: (a: number, b: number, c: number, d: number, e: number, f: bigint) => number;
export const fetchBalanceAllocations: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const monitorPrefundedBalance: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const __wbg_identifierquery_free: (a: number, b: number) => void;
export const identifierquery_new: (a: number, b: number, c: number) => void;
export const identifierquery_id: (a: number, b: number) => void;
export const __wbg_identifiersquery_free: (a: number, b: number) => void;
export const identifiersquery_new: (a: number, b: number, c: number) => void;
export const identifiersquery_ids: (a: number, b: number) => void;
export const identifiersquery_count: (a: number) => number;
export const __wbg_limitquery_free: (a: number, b: number) => void;
export const limitquery_new: () => number;
export const limitquery_set_limit: (a: number, b: number) => void;
export const limitquery_set_offset: (a: number, b: number) => void;
export const limitquery_set_setStartKey: (a: number, b: number, c: number) => void;
export const limitquery_set_setStartIncluded: (a: number, b: number) => void;
export const limitquery_limit: (a: number) => number;
export const limitquery_offset: (a: number) => number;
export const __wbg_documentquery_free: (a: number, b: number) => void;
export const documentquery_new: (a: number, b: number, c: number, d: number, e: number) => void;
export const documentquery_addWhereClause: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const documentquery_addOrderBy: (a: number, b: number, c: number, d: number) => void;
export const documentquery_set_limit: (a: number, b: number) => void;
export const documentquery_set_offset: (a: number, b: number) => void;
export const documentquery_contractId: (a: number, b: number) => void;
export const documentquery_documentType: (a: number, b: number) => void;
export const documentquery_limit: (a: number) => number;
export const documentquery_offset: (a: number) => number;
export const documentquery_getWhereClauses: (a: number, b: number) => void;
export const documentquery_getOrderByClauses: (a: number, b: number) => void;
export const __wbg_epochquery_free: (a: number, b: number) => void;
export const epochquery_new: () => number;
export const epochquery_set_setStartEpoch: (a: number, b: number) => void;
export const epochquery_set_count: (a: number, b: number) => void;
export const epochquery_set_ascending: (a: number, b: number) => void;
export const epochquery_startEpoch: (a: number) => number;
export const epochquery_count: (a: number) => number;
export const epochquery_ascending: (a: number) => number;
export const __wbg_contestedresourcequery_free: (a: number, b: number) => void;
export const contestedresourcequery_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const contestedresourcequery_set_setStartValue: (a: number, b: number, c: number) => void;
export const contestedresourcequery_set_setStartIncluded: (a: number, b: number) => void;
export const contestedresourcequery_set_limit: (a: number, b: number) => void;
export const __wbg_requestsettings_free: (a: number, b: number) => void;
export const requestsettings_new: () => number;
export const requestsettings_setMaxRetries: (a: number, b: number) => void;
export const requestsettings_setInitialRetryDelay: (a: number, b: number) => void;
export const requestsettings_setMaxRetryDelay: (a: number, b: number) => void;
export const requestsettings_setBackoffMultiplier: (a: number, b: number) => void;
export const requestsettings_setTimeout: (a: number, b: number) => void;
export const requestsettings_setUseExponentialBackoff: (a: number, b: number) => void;
export const requestsettings_setRetryOnTimeout: (a: number, b: number) => void;
export const requestsettings_setRetryOnNetworkError: (a: number, b: number) => void;
export const requestsettings_setCustomHeaders: (a: number, b: number) => void;
export const requestsettings_getRetryDelay: (a: number, b: number) => number;
export const requestsettings_toObject: (a: number, b: number) => void;
export const __wbg_retryhandler_free: (a: number, b: number) => void;
export const retryhandler_new: (a: number) => number;
export const retryhandler_shouldRetry: (a: number, b: number) => number;
export const retryhandler_getNextRetryDelay: (a: number) => number;
export const retryhandler_incrementAttempt: (a: number) => void;
export const retryhandler_currentAttempt: (a: number) => number;
export const retryhandler_getElapsedTime: (a: number) => number;
export const retryhandler_isTimeoutExceeded: (a: number) => number;
export const executeWithRetry: (a: number, b: number) => number;
export const __wbg_requestsettingsbuilder_free: (a: number, b: number) => void;
export const requestsettingsbuilder_new: () => number;
export const requestsettingsbuilder_withMaxRetries: (a: number, b: number) => number;
export const requestsettingsbuilder_withTimeout: (a: number, b: number) => number;
export const requestsettingsbuilder_withInitialRetryDelay: (a: number, b: number) => number;
export const requestsettingsbuilder_withBackoffMultiplier: (a: number, b: number) => number;
export const requestsettingsbuilder_withoutRetries: (a: number) => number;
export const requestsettingsbuilder_build: (a: number) => number;
export const __wbg_wasmsdk_free: (a: number, b: number) => void;
export const __wbg_wasmsdkbuilder_free: (a: number, b: number) => void;
export const wasmsdkbuilder_new_mainnet: () => number;
export const wasmsdkbuilder_build: (a: number, b: number) => void;
export const wasmsdkbuilder_with_context_provider: (a: number, b: number) => number;
export const prepare_identity_fetch_request: (a: number, b: number, c: number, d: number, e: number) => void;
export const serializeGetIdentityRequest: (a: number, b: number, c: number, d: number) => void;
export const deserializeGetIdentityResponse: (a: number, b: number) => void;
export const serializeGetDataContractRequest: (a: number, b: number, c: number, d: number) => void;
export const deserializeGetDataContractResponse: (a: number, b: number) => void;
export const serializeBroadcastRequest: (a: number, b: number) => void;
export const deserializeBroadcastResponse: (a: number, b: number) => void;
export const serializeGetIdentityNonceRequest: (a: number, b: number, c: number, d: number) => void;
export const deserializeGetIdentityNonceResponse: (a: number, b: number) => void;
export const serializeWaitForStateTransitionRequest: (a: number, b: number, c: number, d: number) => void;
export const deserializeWaitForStateTransitionResponse: (a: number, b: number) => void;
export const serializeDocumentQuery: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => void;
export const deserializeDocumentQueryResponse: (a: number, b: number) => void;
export const prepareStateTransitionForBroadcast: (a: number, b: number) => void;
export const getRequiredSignaturesForStateTransition: (a: number, b: number) => void;
export const __wbg_wasmsigner_free: (a: number, b: number) => void;
export const wasmsigner_new: () => number;
export const wasmsigner_setIdentityId: (a: number, b: number, c: number, d: number) => void;
export const wasmsigner_addPrivateKey: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const wasmsigner_removePrivateKey: (a: number, b: number) => number;
export const wasmsigner_signData: (a: number, b: number, c: number, d: number) => number;
export const wasmsigner_getKeyCount: (a: number) => number;
export const wasmsigner_hasKey: (a: number, b: number) => number;
export const wasmsigner_getKeyIds: (a: number, b: number) => void;
export const __wbg_browsersigner_free: (a: number, b: number) => void;
export const browsersigner_new: () => number;
export const browsersigner_generateKeyPair: (a: number, b: number, c: number, d: number) => number;
export const browsersigner_signWithStoredKey: (a: number, b: number, c: number, d: number) => number;
export const hdsigner_new: (a: number, b: number, c: number, d: number, e: number) => void;
export const hdsigner_generateMnemonic: (a: number, b: number) => void;
export const hdsigner_deriveKey: (a: number, b: number, c: number) => void;
export const create_data_contract: (a: number, b: number, c: number, d: number, e: bigint, f: number) => void;
export const update_data_contract: (a: number, b: number, c: number, d: number, e: number, f: number, g: bigint, h: number) => void;
export const __wbg_datacontracttransitionbuilder_free: (a: number, b: number) => void;
export const datacontracttransitionbuilder_new: (a: number, b: number, c: number) => void;
export const datacontracttransitionbuilder_setContractId: (a: number, b: number, c: number, d: number) => void;
export const datacontracttransitionbuilder_setVersion: (a: number, b: number) => void;
export const datacontracttransitionbuilder_setUserFeeIncrease: (a: number, b: number) => void;
export const datacontracttransitionbuilder_setIdentityNonce: (a: number, b: bigint) => void;
export const datacontracttransitionbuilder_setIdentityContractNonce: (a: number, b: bigint) => void;
export const datacontracttransitionbuilder_addDocumentSchema: (a: number, b: number, c: number, d: number, e: number) => void;
export const datacontracttransitionbuilder_setContractDefinition: (a: number, b: number, c: number) => void;
export const datacontracttransitionbuilder_buildCreateTransition: (a: number, b: number, c: number) => void;
export const datacontracttransitionbuilder_buildUpdateTransition: (a: number, b: number, c: number) => void;
export const create_document_batch_transition: (a: number, b: number, c: number, d: number) => void;
export const __wbg_documentbatchbuilder_free: (a: number, b: number) => void;
export const documentbatchbuilder_new: (a: number, b: number, c: number) => void;
export const documentbatchbuilder_setUserFeeIncrease: (a: number, b: number) => void;
export const documentbatchbuilder_addCreateDocument: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const documentbatchbuilder_addDeleteDocument: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const documentbatchbuilder_addReplaceDocument: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const documentbatchbuilder_build: (a: number, b: number, c: number) => void;
export const createGroupStateTransitionInfo: (a: number, b: number, c: number, d: number, e: number) => void;
export const createTokenEventBytes: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const createGroupAction: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const addGroupInfoToStateTransition: (a: number, b: number, c: number, d: number) => void;
export const getGroupInfoFromStateTransition: (a: number, b: number, c: number) => void;
export const createGroupMember: (a: number, b: number, c: number, d: number) => void;
export const validateGroupConfig: (a: number, b: number, c: number, d: number) => void;
export const calculateGroupActionApproval: (a: number, b: number, c: number) => void;
export const createGroupConfiguration: (a: number, b: number, c: number, d: number, e: number) => void;
export const deserializeGroupEvent: (a: number, b: number, c: number) => void;
export const serializeGroupEvent: (a: number, b: number) => void;
export const createIdentity: (a: number, b: number, c: number, d: number) => void;
export const topUpIdentity: (a: number, b: number, c: number, d: number, e: number) => void;
export const update_identity: (a: number, b: number, c: number, d: bigint, e: bigint, f: number, g: number, h: number, i: bigint, j: number) => void;
export const __wbg_identitytransitionbuilder_free: (a: number, b: number) => void;
export const identitytransitionbuilder_new: () => number;
export const identitytransitionbuilder_setIdentityId: (a: number, b: number, c: number, d: number) => void;
export const identitytransitionbuilder_setRevision: (a: number, b: bigint) => void;
export const identitytransitionbuilder_addPublicKey: (a: number, b: number, c: number) => void;
export const identitytransitionbuilder_addPublicKeys: (a: number, b: number, c: number) => void;
export const identitytransitionbuilder_disablePublicKey: (a: number, b: number, c: number) => void;
export const identitytransitionbuilder_disablePublicKeys: (a: number, b: number, c: number) => void;
export const identitytransitionbuilder_buildCreateTransition: (a: number, b: number, c: number, d: number) => void;
export const identitytransitionbuilder_buildTopUpTransition: (a: number, b: number, c: number, d: number) => void;
export const identitytransitionbuilder_buildUpdateTransition: (a: number, b: number, c: bigint, d: number, e: number, f: bigint) => void;
export const createBasicIdentity: (a: number, b: number, c: number, d: number, e: number) => void;
export const createStandardIdentityKeys: (a: number) => void;
export const validateIdentityPublicKeys: (a: number, b: number) => void;
export const serializeStateTransition: (a: number, b: number) => void;
export const deserializeStateTransition: (a: number, b: number) => void;
export const getStateTransitionType: (a: number, b: number) => void;
export const calculateStateTransitionId: (a: number, b: number) => void;
export const validateStateTransitionStructure: (a: number, b: number) => void;
export const isIdentitySignedStateTransition: (a: number, b: number) => void;
export const getStateTransitionIdentityId: (a: number, b: number) => void;
export const getModifiedDataIds: (a: number, b: number) => void;
export const getStateTransitionSignableBytes: (a: number, b: number) => void;
export const __wbg_subscriptionhandle_free: (a: number, b: number) => void;
export const subscriptionhandle_id: (a: number, b: number) => void;
export const subscriptionhandle_close: (a: number, b: number) => void;
export const subscriptionhandle_isActive: (a: number) => number;
export const subscribeToIdentityBalanceUpdates: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const subscribeToDataContractUpdates: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const subscribeToDocumentUpdates: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const subscribeToBlockHeaders: (a: number, b: number, c: number, d: number) => void;
export const subscribeToStateTransitionResults: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const __wbg_subscriptionhandlev2_free: (a: number, b: number) => void;
export const subscriptionhandlev2_id: (a: number, b: number) => void;
export const subscriptionhandlev2_close: (a: number, b: number) => void;
export const subscriptionhandlev2_isActive: (a: number) => number;
export const subscribeToIdentityBalanceUpdatesV2: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const subscribeToDataContractUpdatesV2: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const subscribeToDocumentUpdatesV2: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const subscribeWithHandlersV2: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const cleanupAllSubscriptions: () => void;
export const getActiveSubscriptionCount: () => number;
export const __wbg_subscriptionoptions_free: (a: number, b: number) => void;
export const __wbg_get_subscriptionoptions_auto_reconnect: (a: number) => number;
export const __wbg_set_subscriptionoptions_auto_reconnect: (a: number, b: number) => void;
export const __wbg_get_subscriptionoptions_max_reconnect_attempts: (a: number) => number;
export const __wbg_set_subscriptionoptions_max_reconnect_attempts: (a: number, b: number) => void;
export const __wbg_get_subscriptionoptions_reconnect_delay_ms: (a: number) => number;
export const __wbg_set_subscriptionoptions_reconnect_delay_ms: (a: number, b: number) => void;
export const __wbg_get_subscriptionoptions_connection_timeout_ms: (a: number) => number;
export const __wbg_set_subscriptionoptions_connection_timeout_ms: (a: number, b: number) => void;
export const subscriptionoptions_new: () => number;
export const __wbg_tokenoptions_free: (a: number, b: number) => void;
export const tokenoptions_new: () => number;
export const tokenoptions_withRetries: (a: number, b: number) => number;
export const tokenoptions_withTimeout: (a: number, b: number) => number;
export const mintTokens: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const burnTokens: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const transferTokens: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => number;
export const freezeTokens: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const unfreezeTokens: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const getTokenBalance: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const getTokenInfo: (a: number, b: number, c: number, d: number) => number;
export const createTokenIssuance: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const createTokenBurn: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const __wbg_tokenmetadata_free: (a: number, b: number) => void;
export const tokenmetadata_name: (a: number, b: number) => void;
export const tokenmetadata_symbol: (a: number, b: number) => void;
export const tokenmetadata_decimals: (a: number) => number;
export const tokenmetadata_iconUrl: (a: number, b: number) => void;
export const tokenmetadata_description: (a: number, b: number) => void;
export const getContractTokens: (a: number, b: number, c: number, d: number) => number;
export const getTokenHolders: (a: number, b: number, c: number, d: number, e: number) => number;
export const getTokenTransactions: (a: number, b: number, c: number, d: number, e: number) => number;
export const createBatchTokenTransfer: (a: number, b: number, c: number, d: number, e: number, f: number, g: bigint, h: number) => void;
export const monitorTokenEvents: (a: number, b: number, c: number, d: number, e: number) => number;
export const verify_identity_by_id: (a: number, b: number, c: number, d: number, e: number) => number;
export const verify_data_contract_by_id: (a: number, b: number, c: number, d: number, e: number) => number;
export const verifyDocuments: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => void;
export const verifyDocumentsWithContract: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => void;
export const __wbg_verifydocumentquery_free: (a: number, b: number) => void;
export const verifydocumentquery_new: (a: number, b: number, c: number, d: number) => number;
export const verifydocumentquery_setWhere: (a: number, b: number, c: number) => void;
export const verifydocumentquery_setOrderBy: (a: number, b: number, c: number) => void;
export const verifydocumentquery_setLimit: (a: number, b: number) => void;
export const verifydocumentquery_setStartAt: (a: number, b: number, c: number) => void;
export const __wbg_documentverificationresult_free: (a: number, b: number) => void;
export const documentverificationresult_rootHash: (a: number, b: number) => void;
export const documentverificationresult_documentsJson: (a: number, b: number) => void;
export const verifyDocumentsBridge: (a: number, b: number, c: number, d: number) => void;
export const verifySingleDocument: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const __wbg_votechoice_free: (a: number, b: number) => void;
export const votechoice_yes: (a: number, b: number) => number;
export const votechoice_no: (a: number, b: number) => number;
export const votechoice_abstain: (a: number, b: number) => number;
export const votechoice_voteType: (a: number, b: number) => void;
export const votechoice_reason: (a: number, b: number) => void;
export const __wbg_votepoll_free: (a: number, b: number) => void;
export const votepoll_id: (a: number, b: number) => void;
export const votepoll_title: (a: number, b: number) => void;
export const votepoll_description: (a: number, b: number) => void;
export const votepoll_startTime: (a: number) => bigint;
export const votepoll_endTime: (a: number) => bigint;
export const votepoll_voteOptions: (a: number) => number;
export const votepoll_requiredVotes: (a: number) => number;
export const votepoll_currentVotes: (a: number) => number;
export const votepoll_isActive: (a: number) => number;
export const votepoll_getRemainingTime: (a: number) => bigint;
export const votepoll_toObject: (a: number, b: number) => void;
export const __wbg_voteresult_free: (a: number, b: number) => void;
export const voteresult_pollId: (a: number, b: number) => void;
export const voteresult_yesVotes: (a: number) => number;
export const voteresult_noVotes: (a: number) => number;
export const voteresult_abstainVotes: (a: number) => number;
export const voteresult_totalVotes: (a: number) => number;
export const voteresult_passed: (a: number) => number;
export const voteresult_getPercentage: (a: number, b: number, c: number) => number;
export const voteresult_toObject: (a: number, b: number) => void;
export const createVoteTransition: (a: number, b: number, c: number, d: number, e: number, f: number, g: bigint, h: number) => void;
export const fetchActiveVotePolls: (a: number, b: number) => number;
export const fetchVotePoll: (a: number, b: number, c: number) => number;
export const fetchVoteResults: (a: number, b: number, c: number) => number;
export const hasVoted: (a: number, b: number, c: number, d: number, e: number) => number;
export const getVoterVote: (a: number, b: number, c: number, d: number, e: number) => number;
export const delegateVotingPower: (a: number, b: number, c: number, d: number, e: number, f: bigint, g: number) => void;
export const revokeVotingDelegation: (a: number, b: number, c: number, d: bigint, e: number) => void;
export const createVotePoll: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: bigint, k: number) => void;
export const getVotingPower: (a: number, b: number, c: number) => number;
export const monitorVotePoll: (a: number, b: number, c: number, d: number, e: number) => number;
export const __wbg_withdrawaloptions_free: (a: number, b: number) => void;
export const withdrawaloptions_new: () => number;
export const withdrawaloptions_withRetries: (a: number, b: number) => number;
export const withdrawaloptions_withTimeout: (a: number, b: number) => number;
export const withdrawaloptions_withFeeMultiplier: (a: number, b: number) => number;
export const withdrawFromIdentity: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const createWithdrawalTransition: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => void;
export const getWithdrawalStatus: (a: number, b: number, c: number, d: number) => number;
export const getIdentityWithdrawals: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const calculateWithdrawalFee: (a: number, b: number, c: number, d: number) => void;
export const broadcastWithdrawal: (a: number, b: number, c: number, d: number) => number;
export const estimateWithdrawalTime: (a: number, b: number) => number;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const verifyFullIdentitiesByPublicKeyHashesVec: (a: number, b: number, c: number, d: number) => void;
export const verifyFullIdentitiesByPublicKeyHashesMap: (a: number, b: number, c: number, d: number) => void;
export const verifyFullIdentityByIdentityId: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyFullIdentityByNonUniquePublicKeyHash: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyFullIdentityByUniquePublicKeyHash: (a: number, b: number, c: number, d: number) => void;
export const verifyIdentitiesContractKeys: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const __wbg_verifyidentitybalanceandrevisionforidentityidresult_free: (a: number, b: number) => void;
export const verifyidentitybalanceandrevisionforidentityidresult_root_hash: (a: number) => number;
export const verifyidentitybalanceandrevisionforidentityidresult_balance: (a: number, b: number) => void;
export const verifyidentitybalanceandrevisionforidentityidresult_revision: (a: number, b: number) => void;
export const verifyIdentityBalanceAndRevisionForIdentityId: (a: number, b: number, c: number, d: number, e: number) => void;
export const __wbg_verifyidentitybalanceforidentityidresult_free: (a: number, b: number) => void;
export const verifyidentitybalanceforidentityidresult_root_hash: (a: number) => number;
export const verifyidentitybalanceforidentityidresult_balance: (a: number, b: number) => void;
export const verifyIdentityBalanceForIdentityId: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityBalancesForIdentityIdsVec: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityBalancesForIdentityIdsMap: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityContractNonce: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyidentityidbynonuniquepublickeyhashresult_root_hash: (a: number) => number;
export const verifyIdentityIdByNonUniquePublicKeyHash: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyIdentityIdByUniquePublicKeyHash: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityIdsByUniquePublicKeyHashesVec: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityIdsByUniquePublicKeyHashesMap: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityKeysByIdentityId: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const verifyIdentityNonce: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityRevisionForIdentityId: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyDocumentProof: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: bigint, n: number) => void;
export const verifyDocumentProofKeepSerialized: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: bigint, n: number) => void;
export const verifyStartAtDocumentInProof: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: bigint, n: number, o: number, p: number) => void;
export const __wbg_singledocumentdrivequerywasm_free: (a: number, b: number) => void;
export const singledocumentdrivequerywasm_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number) => void;
export const singledocumentdrivequerywasm_contractId: (a: number, b: number) => void;
export const singledocumentdrivequerywasm_documentTypeName: (a: number, b: number) => void;
export const singledocumentdrivequerywasm_documentTypeKeepsHistory: (a: number) => number;
export const singledocumentdrivequerywasm_documentId: (a: number, b: number) => void;
export const singledocumentdrivequerywasm_blockTimeMs: (a: number, b: number) => void;
export const singledocumentdrivequerywasm_contestedStatus: (a: number) => number;
export const __wbg_singledocumentproofresult_free: (a: number, b: number) => void;
export const singledocumentproofresult_rootHash: (a: number, b: number) => void;
export const singledocumentproofresult_documentSerialized: (a: number, b: number) => void;
export const singledocumentproofresult_hasDocument: (a: number) => number;
export const verifySingleDocumentProofKeepSerialized: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const createSingleDocumentQuery: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const createSingleDocumentQueryMaybeContested: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const createSingleDocumentQueryContested: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const verifyContract: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const verifyContractHistory: (a: number, b: number, c: number, d: bigint, e: number, f: number, g: number) => void;
export const verifyTokenBalancesForIdentityIdVec: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenBalancesForIdentityIdMap: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenBalancesForIdentityIdsVec: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenBalancesForIdentityIdsMap: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenDirectSellingPricesVec: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTokenDirectSellingPricesMap: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTokenInfosForIdentityIdVec: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenInfosForIdentityIdMap: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenInfosForIdentityIdsVec: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenInfosForIdentityIdsMap: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenPreProgrammedDistributionsVec: (a: number, b: number, c: number, d: number, e: bigint, f: number, g: number, h: number, i: number) => void;
export const verifyTokenPreProgrammedDistributionsMap: (a: number, b: number, c: number, d: number, e: bigint, f: number, g: number, h: number, i: number) => void;
export const verifyTokenStatusesVec: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTokenStatusesMap: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTokenBalanceForIdentityId: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenContractInfo: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTokenDirectSellingPrice: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTokenInfoForIdentityId: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyTokenPerpetualDistributionLastPaidTime: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const verifyTokenStatus: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTokenTotalSupplyAndAggregatedIdentityBalance: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyActionSignersVec: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const verifyActionSignersMap: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const __wbg_verifyactioninfosincontractresult_free: (a: number, b: number) => void;
export const verifyactioninfosincontractresult_root_hash: (a: number) => number;
export const verifyactioninfosincontractresult_actions: (a: number) => number;
export const verifyActionInfosInContractVec: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const verifyActionInfosInContractMap: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number) => void;
export const verifyGroupInfosInContractVec: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const verifyGroupInfosInContractMap: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const __wbg_verifyactionsignerstotalpowerresult_free: (a: number, b: number) => void;
export const verifyactionsignerstotalpowerresult_root_hash: (a: number) => number;
export const verifyactionsignerstotalpowerresult_action_status: (a: number) => number;
export const verifyactionsignerstotalpowerresult_total_power: (a: number) => bigint;
export const verifyActionSignersTotalPower: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number) => void;
export const verifyGroupInfo: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyIdentityVotesGivenProofVec: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyIdentityVotesGivenProofMap: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyVotePollsEndDateQueryVec: (a: number, b: number, c: number, d: number) => void;
export const verifyVotePollsEndDateQueryMap: (a: number, b: number, c: number, d: number) => void;
export const __wbg_verifycontestsproofresult_free: (a: number, b: number) => void;
export const verifycontestsproofresult_root_hash: (a: number) => number;
export const verifycontestsproofresult_contests: (a: number) => number;
export const verifyContestsProof: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number) => void;
export const verifyMasternodeVote: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const verifySpecializedBalance: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyVotePollVoteStateProof: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => void;
export const verifyVotePollVotesProof: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number) => void;
export const verifyElements: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyEpochInfos: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const verifyEpochProposersByRangeVec: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const verifyEpochProposersByRangeMap: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => void;
export const verifyEpochProposersByIdsVec: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyEpochProposersByIdsMap: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyTotalCreditsInSystem: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const verifyUpgradeState: (a: number, b: number, c: number) => void;
export const verifyUpgradeVoteStatus: (a: number, b: number, c: number, d: number, e: number) => void;
export const __wbg_tokentransitionpathqueryresult_free: (a: number, b: number) => void;
export const tokentransitionpathqueryresult_path_query: (a: number) => number;
export const tokenTransitionIntoPathQuery: (a: number, b: number, c: number, d: number, e: number) => void;
export const tokenBalanceForIdentityIdQuery: (a: number, b: number, c: number) => void;
export const tokenBalancesForIdentityIdsQuery: (a: number, b: number, c: number) => void;
export const tokenInfoForIdentityIdQuery: (a: number, b: number, c: number) => void;
export const tokenDirectPurchasePriceQuery: (a: number, b: number) => void;
export const groupActiveAndClosedActionSingleSignerQuery: (a: number, b: number, c: number, d: number, e: number) => void;
export const verifyStateTransitionWasExecutedWithProof: (a: number, b: number, c: bigint, d: bigint, e: number, f: number, g: number, h: number) => void;
export const main: () => void;
export const wasmsdkbuilder_new_testnet: () => number;
export const identitywasm_getBalance: (a: number) => number;
export const __wbg_identityrevision_free: (a: number, b: number) => void;
export const __wbg_memoryoptimizer_free: (a: number, b: number) => void;
export const __wbg_hdsigner_free: (a: number, b: number) => void;
export const identityrevision_updatedAt: (a: number) => bigint;
export const identityrevision_revision: (a: number) => bigint;
export const hdsigner_derivationPath: (a: number, b: number) => void;
export const __wbg_verifyidentitynonceresult_free: (a: number, b: number) => void;
export const __wbg_verifytokenbalanceforidentityidresult_free: (a: number, b: number) => void;
export const __wbg_verifytotalcreditsinsystemresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentityrevisionforidentityidresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentitycontractnonceresult_free: (a: number, b: number) => void;
export const __wbg_verifyspecializedbalanceresult_free: (a: number, b: number) => void;
export const __wbg_verifystartatdocumentinproofresult_free: (a: number, b: number) => void;
export const __wbg_verifyelementsresult_free: (a: number, b: number) => void;
export const __wbg_verifygroupinfosincontractresult_free: (a: number, b: number) => void;
export const __wbg_verifyvotepollsenddatequeryresult_free: (a: number, b: number) => void;
export const __wbg_verifytokencontractinforesult_free: (a: number, b: number) => void;
export const __wbg_verifytokeninfoforidentityidresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentitiescontractkeysresult_free: (a: number, b: number) => void;
export const __wbg_verifytokendirectsellingpriceresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentityvotesgivenproofresult_free: (a: number, b: number) => void;
export const __wbg_verifydocumentproofkeepserializedresult_free: (a: number, b: number) => void;
export const __wbg_verifyvotepollvotestateproofresult_free: (a: number, b: number) => void;
export const __wbg_verifytokeninfosforidentityidresult_free: (a: number, b: number) => void;
export const __wbg_verifytokendirectsellingpricesresult_free: (a: number, b: number) => void;
export const __wbg_verifytokeninfosforidentityidsresult_free: (a: number, b: number) => void;
export const __wbg_verifyfullidentitybyidentityidresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentitykeysbyidentityidresult_free: (a: number, b: number) => void;
export const __wbg_verifytokenbalancesforidentityidresult_free: (a: number, b: number) => void;
export const __wbg_verifytokenbalancesforidentityidsresult_free: (a: number, b: number) => void;
export const __wbg_verifytokenpreprogrammeddistributionsresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentitybalancesforidentityidsresult_free: (a: number, b: number) => void;
export const __wbg_verifyfullidentitiesbypublickeyhashesresult_free: (a: number, b: number) => void;
export const __wbg_verifyfullidentitybyuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentityidsbyuniquepublickeyhashesresult_free: (a: number, b: number) => void;
export const __wbg_verifymasternodevoteresult_free: (a: number, b: number) => void;
export const __wbg_verifyfullidentitybynonuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const __wbg_verifytokenperpetualdistributionlastpaidtimeresult_free: (a: number, b: number) => void;
export const __wbg_verifystatetransitionwasexecutedwithproofresult_free: (a: number, b: number) => void;
export const __wbg_verifytokentotalsupplyandaggregatedidentitybalanceresult_free: (a: number, b: number) => void;
export const __wbg_verifyupgradevotestatusresult_free: (a: number, b: number) => void;
export const __wbg_verifycontractresult_free: (a: number, b: number) => void;
export const __wbg_verifygroupinforesult_free: (a: number, b: number) => void;
export const __wbg_verifydocumentproofresult_free: (a: number, b: number) => void;
export const __wbg_verifyepochinfosresult_free: (a: number, b: number) => void;
export const __wbg_verifytokenstatusresult_free: (a: number, b: number) => void;
export const __wbg_verifyupgradestateresult_free: (a: number, b: number) => void;
export const __wbg_verifyactionsignersresult_free: (a: number, b: number) => void;
export const __wbg_verifytokenstatusesresult_free: (a: number, b: number) => void;
export const __wbg_verifyepochproposersresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentityidbynonuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const __wbg_verifyvotepollvotesproofresult_free: (a: number, b: number) => void;
export const __wbg_verifycontracthistoryresult_free: (a: number, b: number) => void;
export const __wbg_verifyidentityidbyuniquepublickeyhashresult_free: (a: number, b: number) => void;
export const verifyidentityrevisionforidentityidresult_revision: (a: number, b: number) => void;
export const verifyidentityrevisionforidentityidresult_root_hash: (a: number) => number;
export const verifytokeninfosforidentityidresult_token_infos: (a: number) => number;
export const verifytokeninfosforidentityidresult_root_hash: (a: number) => number;
export const verifyvotepollvotestateproofresult_result: (a: number) => number;
export const verifyvotepollvotestateproofresult_root_hash: (a: number) => number;
export const verifytokenbalancesforidentityidresult_balances: (a: number) => number;
export const verifytokenbalancesforidentityidresult_root_hash: (a: number) => number;
export const verifytokendirectsellingpriceresult_price: (a: number) => number;
export const verifytokendirectsellingpriceresult_root_hash: (a: number) => number;
export const verifyidentityvotesgivenproofresult_votes: (a: number) => number;
export const verifyidentityvotesgivenproofresult_root_hash: (a: number) => number;
export const verifytokenbalanceforidentityidresult_balance: (a: number, b: number) => void;
export const verifytokenbalanceforidentityidresult_root_hash: (a: number) => number;
export const verifyupgradevotestatusresult_vote_status: (a: number) => number;
export const verifyupgradevotestatusresult_root_hash: (a: number) => number;
export const verifyfullidentitybyidentityidresult_identity: (a: number) => number;
export const verifyfullidentitybyidentityidresult_root_hash: (a: number) => number;
export const verifyvotepollvotesproofresult_votes: (a: number) => number;
export const verifyvotepollvotesproofresult_root_hash: (a: number) => number;
export const verifyepochinfosresult_epoch_infos: (a: number) => number;
export const verifyepochinfosresult_root_hash: (a: number) => number;
export const verifytokenstatusesresult_statuses: (a: number) => number;
export const verifytokenstatusesresult_root_hash: (a: number) => number;
export const verifyspecializedbalanceresult_balance: (a: number, b: number) => void;
export const verifyspecializedbalanceresult_root_hash: (a: number) => number;
export const verifytokeninfosforidentityidsresult_token_infos: (a: number) => number;
export const verifytokeninfosforidentityidsresult_root_hash: (a: number) => number;
export const verifytokendirectsellingpricesresult_prices: (a: number) => number;
export const verifytokendirectsellingpricesresult_root_hash: (a: number) => number;
export const verifyelementsresult_elements: (a: number) => number;
export const verifyelementsresult_root_hash: (a: number) => number;
export const verifytokencontractinforesult_contract_info: (a: number) => number;
export const verifytokencontractinforesult_root_hash: (a: number) => number;
export const verifyidentitynonceresult_nonce: (a: number, b: number) => void;
export const verifyidentitynonceresult_root_hash: (a: number) => number;
export const verifygroupinforesult_group: (a: number) => number;
export const verifygroupinforesult_root_hash: (a: number) => number;
export const verifytokenstatusresult_status: (a: number) => number;
export const verifytokenstatusresult_root_hash: (a: number) => number;
export const verifyidentityidbyuniquepublickeyhashresult_identity_id: (a: number, b: number) => void;
export const verifydocumentproofresult_documents: (a: number) => number;
export const verifydocumentproofresult_root_hash: (a: number) => number;
export const verifyfullidentitybyuniquepublickeyhashresult_identity: (a: number) => number;
export const verifyfullidentitybyuniquepublickeyhashresult_root_hash: (a: number) => number;
export const verifystatetransitionwasexecutedwithproofresult_proof_result: (a: number) => number;
export const verifystatetransitionwasexecutedwithproofresult_root_hash: (a: number) => number;
export const verifyepochproposersresult_proposers: (a: number) => number;
export const verifyepochproposersresult_root_hash: (a: number) => number;
export const verifyidentitykeysbyidentityidresult_identity: (a: number) => number;
export const verifyidentitykeysbyidentityidresult_root_hash: (a: number) => number;
export const verifyvotepollsenddatequeryresult_vote_polls: (a: number) => number;
export const verifyvotepollsenddatequeryresult_root_hash: (a: number) => number;
export const verifyfullidentitybynonuniquepublickeyhashresult_identity: (a: number) => number;
export const verifyfullidentitybynonuniquepublickeyhashresult_root_hash: (a: number) => number;
export const verifytokenpreprogrammeddistributionsresult_distributions: (a: number) => number;
export const verifytokenpreprogrammeddistributionsresult_root_hash: (a: number) => number;
export const verifyfullidentitiesbypublickeyhashesresult_identities: (a: number) => number;
export const verifyfullidentitiesbypublickeyhashesresult_root_hash: (a: number) => number;
export const verifyactionsignersresult_signers: (a: number) => number;
export const verifyactionsignersresult_root_hash: (a: number) => number;
export const verifytokenbalancesforidentityidsresult_balances: (a: number) => number;
export const verifytokenbalancesforidentityidsresult_root_hash: (a: number) => number;
export const verifycontracthistoryresult_contract_history: (a: number) => number;
export const verifycontracthistoryresult_root_hash: (a: number) => number;
export const verifyupgradestateresult_upgrade_state: (a: number) => number;
export const verifyupgradestateresult_root_hash: (a: number) => number;
export const verifytokentotalsupplyandaggregatedidentitybalanceresult_total_supply_and_balance: (a: number) => number;
export const verifytokentotalsupplyandaggregatedidentitybalanceresult_root_hash: (a: number) => number;
export const verifyidentitybalancesforidentityidsresult_balances: (a: number) => number;
export const verifyidentitybalancesforidentityidsresult_root_hash: (a: number) => number;
export const verifyidentitiescontractkeysresult_keys: (a: number) => number;
export const verifyidentitiescontractkeysresult_root_hash: (a: number) => number;
export const verifyidentitycontractnonceresult_nonce: (a: number, b: number) => void;
export const verifyidentitycontractnonceresult_root_hash: (a: number) => number;
export const verifystartatdocumentinproofresult_document: (a: number) => number;
export const verifystartatdocumentinproofresult_root_hash: (a: number) => number;
export const verifygroupinfosincontractresult_groups: (a: number) => number;
export const verifygroupinfosincontractresult_root_hash: (a: number) => number;
export const verifydocumentproofkeepserializedresult_serialized_documents: (a: number) => number;
export const verifydocumentproofkeepserializedresult_root_hash: (a: number) => number;
export const verifyidentityidsbyuniquepublickeyhashesresult_identity_ids: (a: number) => number;
export const verifyidentityidsbyuniquepublickeyhashesresult_root_hash: (a: number) => number;
export const verifymasternodevoteresult_vote: (a: number, b: number) => void;
export const verifymasternodevoteresult_root_hash: (a: number) => number;
export const verifyidentityidbynonuniquepublickeyhashresult_identity_id: (a: number, b: number) => void;
export const verifyidentityidbyuniquepublickeyhashresult_root_hash: (a: number) => number;
export const verifycontractresult_contract: (a: number) => number;
export const verifycontractresult_root_hash: (a: number) => number;
export const verifytotalcreditsinsystemresult_total_credits: (a: number) => bigint;
export const verifytotalcreditsinsystemresult_root_hash: (a: number) => number;
export const verifytokeninfoforidentityidresult_token_info: (a: number) => number;
export const verifytokeninfoforidentityidresult_root_hash: (a: number) => number;
export const verifytokenperpetualdistributionlastpaidtimeresult_last_paid_time: (a: number) => number;
export const verifytokenperpetualdistributionlastpaidtimeresult_root_hash: (a: number) => number;
export const __wbindgen_export_0: (a: number, b: number) => number;
export const __wbindgen_export_1: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_2: (a: number) => void;
export const __wbindgen_export_3: (a: number, b: number, c: number) => void;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_export_5: (a: number, b: number, c: number) => void;
export const __wbindgen_export_6: (a: number, b: number) => void;
export const __wbindgen_export_7: (a: number, b: number) => void;
export const __wbindgen_export_8: (a: number, b: number, c: number, d: number) => void;
export const __wbindgen_start: () => void;
